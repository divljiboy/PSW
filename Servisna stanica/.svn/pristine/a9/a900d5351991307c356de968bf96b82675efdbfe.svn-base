<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (version 1.7.0_79) on Sun Jan 17 21:25:01 CET 2016 -->
<title>TableSchemaTest</title>
<meta name="date" content="2016-01-17">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="TableSchemaTest";
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/TableSchemaTest.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../ra81_2012/TableModelTest.html" title="class in ra81_2012"><span class="strong">Prev Class</span></a></li>
<li>Next Class</li>
</ul>
<ul class="navList">
<li><a href="../index.html?ra81_2012/TableSchemaTest.html" target="_top">Frames</a></li>
<li><a href="TableSchemaTest.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">ra81_2012</div>
<h2 title="Class TableSchemaTest" class="title">Class TableSchemaTest</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>ra81_2012.TableSchemaTest</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<br>
<pre>public class <span class="strong">TableSchemaTest</span>
extends java.lang.Object</pre>
<div class="block"><code>JUnit4</code> test class for <a href="../model/TableSchema.html" title="class in model"><code>TableSchema</code></a>.</div>
<dl><dt><span class="strong">Author:</span></dt>
  <dd>Milan Radet</dd></dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../ra81_2012/TableSchemaTest.html#TableSchemaTest()">TableSchemaTest</a></strong>()</code>&nbsp;</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../ra81_2012/TableSchemaTest.html#setUp()">setUp</a></strong>()</code>
<div class="block">Sets up <a href="../ra81_2012/TableSchemaTest.html" title="class in ra81_2012"><code>TableSchemaTest</code></a>'s members.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../ra81_2012/TableSchemaTest.html#testFindColumn()">testFindColumn</a></strong>()</code>
<div class="block">Tests <a href="../model/TableSchema.html#findColumn(java.lang.String)"><code>TableSchema.findColumn(String)()</code></a> by checking every
 <a href="../model/TableColumn.html" title="class in model"><code>TableColumn</code></a>s' code and the result of the method whose parameter
 is that code.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../ra81_2012/TableSchemaTest.html#testGetCode()">testGetCode</a></strong>()</code>
<div class="block">Tests <a href="../model/TableSchema.html#getCode()"><code>TableSchema.getCode()</code></a> method by comparing it to
 <code>String</code>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../ra81_2012/TableSchemaTest.html#testGetColumns()">testGetColumns</a></strong>()</code>
<div class="block">Tests <a href="../model/TableSchema.html#getColumns()"><code>TableSchema.getColumns()</code></a> by comparing the codes of
 <a href="../model/TableColumn.html" title="class in model"><code>TableColumn</code></a>s to the ones initially given.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../ra81_2012/TableSchemaTest.html#testGetConnection()">testGetConnection</a></strong>()</code>
<div class="block">Tests <a href="../model/TableSchema.html#getConnection()"><code>TableSchema.getConnection()</code></a> by comparing to the initial
 <a href="../ra81_2012/MockupConnection.html" title="class in ra81_2012"><code>MockupConnection</code></a>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../ra81_2012/TableSchemaTest.html#testGetName()">testGetName</a></strong>()</code>
<div class="block">Tests <a href="../model/TableSchema.html#getName()"><code>TableSchema.getName()</code></a> method by setting <a href="../model/TableSchema.html" title="class in model"><code>TableSchema</code></a>
 's name and comparing it to its new value.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../ra81_2012/TableSchemaTest.html#testGetNode()">testGetNode</a></strong>()</code>
<div class="block">Tests <a href="../model/TableSchema.html#getNode()"><code>TableSchema.getNode()</code></a> by creating a new <a href="../model/TreeNode.html" title="class in model"><code>TreeNode</code></a>
 which uses a <a href="../ra81_2012/MockupJsonNode.html" title="class in ra81_2012"><code>MockupJsonNode</code></a>, setting it to original
 <a href="../model/TableSchema.html" title="class in model"><code>TableSchema</code></a> and comparing references.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../ra81_2012/TableSchemaTest.html#testGetTableSchemas()">testGetTableSchemas</a></strong>()</code>
<div class="block">Tests <a href="../model/TableSchema.html#getTableSchemas()"><code>TableSchema.getTableSchemas()</code></a> static method by comparing it
 with new <code>HashMap</code>, which contains the same <a href="../model/TableSchema.html" title="class in model"><code>TableSchema</code></a> as
 the result of the method.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../ra81_2012/TableSchemaTest.html#testGetTableString()">testGetTableString</a></strong>()</code>
<div class="block">Tests <a href="../model/TableSchema.html#getTable(java.lang.String)"><code>TableSchema.getTable(String)</code></a> static method by searching the
 original <a href="../model/TableSchema.html" title="class in model"><code>TableSchema</code></a> by its code.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../ra81_2012/TableSchemaTest.html#testGetTableTreeNode()">testGetTableTreeNode</a></strong>()</code>
<div class="block">Tests <a href="../model/TableSchema.html#getTable(model.TreeNode)"><code>TableSchema.getTable(TreeNode)</code></a> static method by searching
 the original <a href="../model/TableSchema.html" title="class in model"><code>TableSchema</code></a> by its <a href="../model/TreeNode.html" title="class in model"><code>TreeNode</code></a>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../ra81_2012/TableSchemaTest.html#testSetCode()">testSetCode</a></strong>()</code>
<div class="block">Tests <a href="../model/TableSchema.html#setCode(java.lang.String)"><code>TableSchema.setCode(String)</code></a> method by setting it to a new
 value and comparing to it.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../ra81_2012/TableSchemaTest.html#testSetColumns()">testSetColumns</a></strong>()</code>
<div class="block">Tests <a href="../model/TableSchema.html#setColumns(java.util.ArrayList)"><code>TableSchema.setColumns(ArrayList)</code></a> by creating a new
 <code>ArrayList</code> of <a href="../model/TableColumn.html" title="class in model"><code>TableColumn</code></a>s with new codes, setting it to
 original <a href="../model/TableSchema.html" title="class in model"><code>TableSchema</code></a>, and comparing the references to the
 <a href="../model/TableColumn.html" title="class in model"><code>TableColumn</code></a>s.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../ra81_2012/TableSchemaTest.html#testSetConnection()">testSetConnection</a></strong>()</code>
<div class="block">Tests <a href="../model/TableSchema.html#setConnection(java.sql.Connection)"><code>TableSchema.setConnection(Connection)</code></a> by setting the
 connection to a new <a href="../ra81_2012/MockupConnection.html" title="class in ra81_2012"><code>MockupConnection</code></a> object and comparing it to
 it.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../ra81_2012/TableSchemaTest.html#testSetForeignKeys()">testSetForeignKeys</a></strong>()</code>
<div class="block">Tests <a href="../model/TableSchema.html#setForeignKeys()"><code>TableSchema.setForeignKeys()</code></a> by creating another two
 <a href="../model/TableSchema.html" title="class in model"><code>TableSchema</code></a>s whose some <a href="../model/TableColumn.html" title="class in model"><code>TableColumn</code></a>s are referenced by
 the original <a href="../model/TableSchema.html" title="class in model"><code>TableSchema</code></a> and checking its <a href="../model/TableColumn.html" title="class in model"><code>TableColumn</code></a>s
 via <a href="../model/TableColumn.html#getReferencedTableColumns()"><code>TableColumn.getReferencedTableColumns()</code></a> method.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../ra81_2012/TableSchemaTest.html#testSetName()">testSetName</a></strong>()</code>
<div class="block">Tests <a href="../model/TableSchema.html#setName(java.lang.String)"><code>TableSchema.setName(String)</code></a> method by setting
 <a href="../model/TableSchema.html" title="class in model"><code>TableSchema</code></a> 's name and comparing it to its new value.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../ra81_2012/TableSchemaTest.html#testSetNode()">testSetNode</a></strong>()</code>
<div class="block">Tests <a href="../model/TableSchema.html#setNode(model.TreeNode)"><code>TableSchema.setNode(TreeNode)</code></a> by creating a new
 <a href="../model/TreeNode.html" title="class in model"><code>TreeNode</code></a> which uses a <a href="../ra81_2012/MockupJsonNode.html" title="class in ra81_2012"><code>MockupJsonNode</code></a>, setting it to
 original <a href="../model/TableSchema.html" title="class in model"><code>TableSchema</code></a> and comparing references.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../ra81_2012/TableSchemaTest.html#testSetPrimaryKeys()">testSetPrimaryKeys</a></strong>()</code>
<div class="block">Tests <a href="../model/TableSchema.html#setPrimaryKeys()"><code>TableSchema.setPrimaryKeys()</code></a> by checking every
 <a href="../model/TableColumn.html" title="class in model"><code>TableColumn</code></a> if it's the primary or not.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../ra81_2012/TableSchemaTest.html#testSetTableSchemas()">testSetTableSchemas</a></strong>()</code>
<div class="block">Tests <a href="../model/TableSchema.html#setTableSchemas(java.util.HashMap)"><code>TableSchema.setTableSchemas(HashMap)</code></a> static method by
 comparing its content, size and keys.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../ra81_2012/TableSchemaTest.html#testUpdateColumnNames()">testUpdateColumnNames</a></strong>()</code>
<div class="block">Tests <a href="../model/TableSchema.html#updateColumnNames()"><code>TableSchema.updateColumnNames()</code></a> by comparing the names of
 <a href="../model/TableColumn.html" title="class in model"><code>TableColumn</code></a>s to their expected values.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>equals, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="TableSchemaTest()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>TableSchemaTest</h4>
<pre>public&nbsp;TableSchemaTest()</pre>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="setUp()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setUp</h4>
<pre>public&nbsp;void&nbsp;setUp()
           throws java.lang.Exception</pre>
<div class="block">Sets up <a href="../ra81_2012/TableSchemaTest.html" title="class in ra81_2012"><code>TableSchemaTest</code></a>'s members. Creates a default test
 <a href="../model/TableSchema.html" title="class in model"><code>TableSchema</code></a> with test <a href="../model/TableColumn.html" title="class in model"><code>TableColumn</code></a>s and a default
 <a href="../ra81_2012/MockupConnection.html" title="class in ra81_2012"><code>MockupConnection</code></a>.</div>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd><dt><span class="strong">See Also:</span></dt><dd><a href="../model/TableSchema.html" title="class in model"><code>TableSchema</code></a>, 
<a href="../model/TableColumn.html" title="class in model"><code>TableColumn</code></a>, 
<a href="../ra81_2012/MockupConnection.html" title="class in ra81_2012"><code>MockupConnection</code></a></dd></dl>
</li>
</ul>
<a name="testSetPrimaryKeys()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>testSetPrimaryKeys</h4>
<pre>public&nbsp;void&nbsp;testSetPrimaryKeys()
                        throws java.sql.SQLException</pre>
<div class="block">Tests <a href="../model/TableSchema.html#setPrimaryKeys()"><code>TableSchema.setPrimaryKeys()</code></a> by checking every
 <a href="../model/TableColumn.html" title="class in model"><code>TableColumn</code></a> if it's the primary or not. First 2 are, the others
 are not.</div>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code>java.sql.SQLException</code></dd><dt><span class="strong">See Also:</span></dt><dd><a href="../model/TableSchema.html" title="class in model"><code>TableSchema</code></a>, 
<a href="../model/TableSchema.html#setPrimaryKeys()"><code>TableSchema.setPrimaryKeys()</code></a>, 
<a href="../model/TableSchema.html#getColumns()"><code>TableSchema.getColumns()</code></a>, 
<a href="../model/TableColumn.html#isPrimaryKey()"><code>TableColumn.isPrimaryKey()</code></a></dd></dl>
</li>
</ul>
<a name="testSetForeignKeys()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>testSetForeignKeys</h4>
<pre>public&nbsp;void&nbsp;testSetForeignKeys()
                        throws java.sql.SQLException</pre>
<div class="block">Tests <a href="../model/TableSchema.html#setForeignKeys()"><code>TableSchema.setForeignKeys()</code></a> by creating another two
 <a href="../model/TableSchema.html" title="class in model"><code>TableSchema</code></a>s whose some <a href="../model/TableColumn.html" title="class in model"><code>TableColumn</code></a>s are referenced by
 the original <a href="../model/TableSchema.html" title="class in model"><code>TableSchema</code></a> and checking its <a href="../model/TableColumn.html" title="class in model"><code>TableColumn</code></a>s
 via <a href="../model/TableColumn.html#getReferencedTableColumns()"><code>TableColumn.getReferencedTableColumns()</code></a> method.</div>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code>java.sql.SQLException</code></dd><dt><span class="strong">See Also:</span></dt><dd><a href="../model/TableSchema.html" title="class in model"><code>TableSchema</code></a>, 
<a href="../model/TableSchema.html#setForeignKeys()"><code>TableSchema.setForeignKeys()</code></a>, 
<a href="../model/TableSchema.html#getColumns()"><code>TableSchema.getColumns()</code></a>, 
<a href="../model/TableColumn.html#getReferencedTableColumns()"><code>TableColumn.getReferencedTableColumns()</code></a></dd></dl>
</li>
</ul>
<a name="testFindColumn()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>testFindColumn</h4>
<pre>public&nbsp;void&nbsp;testFindColumn()</pre>
<div class="block">Tests <a href="../model/TableSchema.html#findColumn(java.lang.String)"><code>TableSchema.findColumn(String)()</code></a> by checking every
 <a href="../model/TableColumn.html" title="class in model"><code>TableColumn</code></a>s' code and the result of the method whose parameter
 is that code.</div>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="../model/TableSchema.html" title="class in model"><code>TableSchema</code></a>, 
<a href="../model/TableSchema.html#findColumn(java.lang.String)"><code>TableSchema.findColumn(String)</code></a>, 
<a href="../model/TableSchema.html#getColumns()"><code>TableSchema.getColumns()</code></a></dd></dl>
</li>
</ul>
<a name="testGetTableString()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>testGetTableString</h4>
<pre>public&nbsp;void&nbsp;testGetTableString()
                        throws java.sql.SQLException</pre>
<div class="block">Tests <a href="../model/TableSchema.html#getTable(java.lang.String)"><code>TableSchema.getTable(String)</code></a> static method by searching the
 original <a href="../model/TableSchema.html" title="class in model"><code>TableSchema</code></a> by its code.</div>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code>java.sql.SQLException</code></dd><dt><span class="strong">See Also:</span></dt><dd><a href="../model/TableSchema.html" title="class in model"><code>TableSchema</code></a>, 
<a href="../model/TableSchema.html#getTable(java.lang.String)"><code>TableSchema.getTable(String)</code></a></dd></dl>
</li>
</ul>
<a name="testGetTableTreeNode()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>testGetTableTreeNode</h4>
<pre>public&nbsp;void&nbsp;testGetTableTreeNode()
                          throws java.sql.SQLException</pre>
<div class="block">Tests <a href="../model/TableSchema.html#getTable(model.TreeNode)"><code>TableSchema.getTable(TreeNode)</code></a> static method by searching
 the original <a href="../model/TableSchema.html" title="class in model"><code>TableSchema</code></a> by its <a href="../model/TreeNode.html" title="class in model"><code>TreeNode</code></a>.
 <a href="../model/TreeNode.html" title="class in model"><code>TreeNode</code></a> uses <a href="../ra81_2012/MockupJsonNode.html" title="class in ra81_2012"><code>MockupJsonNode</code></a>.</div>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code>java.sql.SQLException</code></dd><dt><span class="strong">See Also:</span></dt><dd><a href="../model/TableSchema.html" title="class in model"><code>TableSchema</code></a>, 
<a href="../model/TableSchema.html#getTable(model.TreeNode)"><code>TableSchema.getTable(TreeNode)</code></a>, 
<a href="../model/TreeNode.html" title="class in model"><code>TreeNode</code></a>, 
<a href="../ra81_2012/MockupJsonNode.html" title="class in ra81_2012"><code>MockupJsonNode</code></a>, 
<code>JsonNode</code></dd></dl>
</li>
</ul>
<a name="testGetTableSchemas()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>testGetTableSchemas</h4>
<pre>public&nbsp;void&nbsp;testGetTableSchemas()</pre>
<div class="block">Tests <a href="../model/TableSchema.html#getTableSchemas()"><code>TableSchema.getTableSchemas()</code></a> static method by comparing it
 with new <code>HashMap</code>, which contains the same <a href="../model/TableSchema.html" title="class in model"><code>TableSchema</code></a> as
 the result of the method.</div>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="../model/TableSchema.html" title="class in model"><code>TableSchema</code></a>, 
<a href="../model/TableSchema.html#getTableSchemas()"><code>TableSchema.getTableSchemas()</code></a>, 
<code>HashMap</code></dd></dl>
</li>
</ul>
<a name="testSetTableSchemas()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>testSetTableSchemas</h4>
<pre>public&nbsp;void&nbsp;testSetTableSchemas()</pre>
<div class="block">Tests <a href="../model/TableSchema.html#setTableSchemas(java.util.HashMap)"><code>TableSchema.setTableSchemas(HashMap)</code></a> static method by
 comparing its content, size and keys.</div>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="../model/TableSchema.html" title="class in model"><code>TableSchema</code></a>, 
<a href="../model/TableSchema.html#setTableSchemas(java.util.HashMap)"><code>TableSchema.setTableSchemas(HashMap)</code></a>, 
<code>HashMap</code></dd></dl>
</li>
</ul>
<a name="testGetName()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>testGetName</h4>
<pre>public&nbsp;void&nbsp;testGetName()</pre>
<div class="block">Tests <a href="../model/TableSchema.html#getName()"><code>TableSchema.getName()</code></a> method by setting <a href="../model/TableSchema.html" title="class in model"><code>TableSchema</code></a>
 's name and comparing it to its new value.</div>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="../model/TableSchema.html" title="class in model"><code>TableSchema</code></a>, 
<a href="../model/TableSchema.html#getName()"><code>TableSchema.getName()</code></a></dd></dl>
</li>
</ul>
<a name="testSetName()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>testSetName</h4>
<pre>public&nbsp;void&nbsp;testSetName()</pre>
<div class="block">Tests <a href="../model/TableSchema.html#setName(java.lang.String)"><code>TableSchema.setName(String)</code></a> method by setting
 <a href="../model/TableSchema.html" title="class in model"><code>TableSchema</code></a> 's name and comparing it to its new value.</div>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="../model/TableSchema.html" title="class in model"><code>TableSchema</code></a>, 
<a href="../model/TableSchema.html#setName(java.lang.String)"><code>TableSchema.setName(String)</code></a></dd></dl>
</li>
</ul>
<a name="testGetCode()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>testGetCode</h4>
<pre>public&nbsp;void&nbsp;testGetCode()</pre>
<div class="block">Tests <a href="../model/TableSchema.html#getCode()"><code>TableSchema.getCode()</code></a> method by comparing it to
 <code>String</code>.</div>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="../model/TableSchema.html" title="class in model"><code>TableSchema</code></a>, 
<a href="../model/TableSchema.html#getCode()"><code>TableSchema.getCode()</code></a>, 
<code>String</code></dd></dl>
</li>
</ul>
<a name="testSetCode()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>testSetCode</h4>
<pre>public&nbsp;void&nbsp;testSetCode()</pre>
<div class="block">Tests <a href="../model/TableSchema.html#setCode(java.lang.String)"><code>TableSchema.setCode(String)</code></a> method by setting it to a new
 value and comparing to it.</div>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="../model/TableSchema.html" title="class in model"><code>TableSchema</code></a>, 
<a href="../model/TableSchema.html#setCode(java.lang.String)"><code>TableSchema.setCode(String)</code></a></dd></dl>
</li>
</ul>
<a name="testGetColumns()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>testGetColumns</h4>
<pre>public&nbsp;void&nbsp;testGetColumns()</pre>
<div class="block">Tests <a href="../model/TableSchema.html#getColumns()"><code>TableSchema.getColumns()</code></a> by comparing the codes of
 <a href="../model/TableColumn.html" title="class in model"><code>TableColumn</code></a>s to the ones initially given.</div>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="../model/TableSchema.html" title="class in model"><code>TableSchema</code></a>, 
<a href="../model/TableSchema.html#getColumns()"><code>TableSchema.getColumns()</code></a>, 
<a href="../model/TableColumn.html" title="class in model"><code>TableColumn</code></a>, 
<a href="../model/TableColumn.html#getCode()"><code>TableColumn.getCode()</code></a></dd></dl>
</li>
</ul>
<a name="testSetColumns()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>testSetColumns</h4>
<pre>public&nbsp;void&nbsp;testSetColumns()</pre>
<div class="block">Tests <a href="../model/TableSchema.html#setColumns(java.util.ArrayList)"><code>TableSchema.setColumns(ArrayList)</code></a> by creating a new
 <code>ArrayList</code> of <a href="../model/TableColumn.html" title="class in model"><code>TableColumn</code></a>s with new codes, setting it to
 original <a href="../model/TableSchema.html" title="class in model"><code>TableSchema</code></a>, and comparing the references to the
 <a href="../model/TableColumn.html" title="class in model"><code>TableColumn</code></a>s.</div>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="../model/TableSchema.html" title="class in model"><code>TableSchema</code></a>, 
<a href="../model/TableSchema.html#setColumns(java.util.ArrayList)"><code>TableSchema.setColumns(ArrayList)</code></a>, 
<code>ArrayList</code>, 
<a href="../model/TableColumn.html" title="class in model"><code>TableColumn</code></a></dd></dl>
</li>
</ul>
<a name="testGetNode()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>testGetNode</h4>
<pre>public&nbsp;void&nbsp;testGetNode()</pre>
<div class="block">Tests <a href="../model/TableSchema.html#getNode()"><code>TableSchema.getNode()</code></a> by creating a new <a href="../model/TreeNode.html" title="class in model"><code>TreeNode</code></a>
 which uses a <a href="../ra81_2012/MockupJsonNode.html" title="class in ra81_2012"><code>MockupJsonNode</code></a>, setting it to original
 <a href="../model/TableSchema.html" title="class in model"><code>TableSchema</code></a> and comparing references.</div>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="../model/TableSchema.html" title="class in model"><code>TableSchema</code></a>, 
<a href="../model/TableSchema.html#getNode()"><code>TableSchema.getNode()</code></a>, 
<a href="../model/TableSchema.html#setNode(model.TreeNode)"><code>TableSchema.setNode(TreeNode)</code></a>, 
<a href="../model/TreeNode.html" title="class in model"><code>TreeNode</code></a>, 
<a href="../ra81_2012/MockupJsonNode.html" title="class in ra81_2012"><code>MockupJsonNode</code></a>, 
<code>JsonNode</code></dd></dl>
</li>
</ul>
<a name="testSetNode()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>testSetNode</h4>
<pre>public&nbsp;void&nbsp;testSetNode()</pre>
<div class="block">Tests <a href="../model/TableSchema.html#setNode(model.TreeNode)"><code>TableSchema.setNode(TreeNode)</code></a> by creating a new
 <a href="../model/TreeNode.html" title="class in model"><code>TreeNode</code></a> which uses a <a href="../ra81_2012/MockupJsonNode.html" title="class in ra81_2012"><code>MockupJsonNode</code></a>, setting it to
 original <a href="../model/TableSchema.html" title="class in model"><code>TableSchema</code></a> and comparing references.</div>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="../model/TableSchema.html" title="class in model"><code>TableSchema</code></a>, 
<a href="../model/TableSchema.html#getNode()"><code>TableSchema.getNode()</code></a>, 
<a href="../model/TableSchema.html#setNode(model.TreeNode)"><code>TableSchema.setNode(TreeNode)</code></a>, 
<a href="../model/TreeNode.html" title="class in model"><code>TreeNode</code></a>, 
<a href="../ra81_2012/MockupJsonNode.html" title="class in ra81_2012"><code>MockupJsonNode</code></a>, 
<code>JsonNode</code></dd></dl>
</li>
</ul>
<a name="testUpdateColumnNames()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>testUpdateColumnNames</h4>
<pre>public&nbsp;void&nbsp;testUpdateColumnNames()</pre>
<div class="block">Tests <a href="../model/TableSchema.html#updateColumnNames()"><code>TableSchema.updateColumnNames()</code></a> by comparing the names of
 <a href="../model/TableColumn.html" title="class in model"><code>TableColumn</code></a>s to their expected values.</div>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="../model/TableSchema.html" title="class in model"><code>TableSchema</code></a>, 
<a href="../model/TableSchema.html#updateColumnNames()"><code>TableSchema.updateColumnNames()</code></a>, 
<a href="../model/TableColumn.html" title="class in model"><code>TableColumn</code></a>, 
<a href="../model/TableColumn.html#getName()"><code>TableColumn.getName()</code></a></dd></dl>
</li>
</ul>
<a name="testGetConnection()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>testGetConnection</h4>
<pre>public&nbsp;void&nbsp;testGetConnection()</pre>
<div class="block">Tests <a href="../model/TableSchema.html#getConnection()"><code>TableSchema.getConnection()</code></a> by comparing to the initial
 <a href="../ra81_2012/MockupConnection.html" title="class in ra81_2012"><code>MockupConnection</code></a>.</div>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="../model/TableSchema.html" title="class in model"><code>TableSchema</code></a>, 
<a href="../model/TableSchema.html#getConnection()"><code>TableSchema.getConnection()</code></a>, 
<a href="../ra81_2012/MockupConnection.html" title="class in ra81_2012"><code>MockupConnection</code></a>, 
<code>Connection</code></dd></dl>
</li>
</ul>
<a name="testSetConnection()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>testSetConnection</h4>
<pre>public&nbsp;void&nbsp;testSetConnection()</pre>
<div class="block">Tests <a href="../model/TableSchema.html#setConnection(java.sql.Connection)"><code>TableSchema.setConnection(Connection)</code></a> by setting the
 connection to a new <a href="../ra81_2012/MockupConnection.html" title="class in ra81_2012"><code>MockupConnection</code></a> object and comparing it to
 it.</div>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="../model/TableSchema.html" title="class in model"><code>TableSchema</code></a>, 
<a href="../model/TableSchema.html#getConnection()"><code>TableSchema.getConnection()</code></a>, 
<a href="../model/TableSchema.html#setConnection(java.sql.Connection)"><code>TableSchema.setConnection(Connection)</code></a>, 
<a href="../ra81_2012/MockupConnection.html" title="class in ra81_2012"><code>MockupConnection</code></a>, 
<code>Connection</code></dd></dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/TableSchemaTest.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../ra81_2012/TableModelTest.html" title="class in ra81_2012"><span class="strong">Prev Class</span></a></li>
<li>Next Class</li>
</ul>
<ul class="navList">
<li><a href="../index.html?ra81_2012/TableSchemaTest.html" target="_top">Frames</a></li>
<li><a href="TableSchemaTest.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
