<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (version 1.7.0_79) on Sun Jan 17 21:24:54 CET 2016 -->
<title>TabbedPane</title>
<meta name="date" content="2016-01-17">
<link rel="stylesheet" type="text/css" href="../../stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="TabbedPane";
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/TabbedPane.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../index-files/index-1.html">Index</a></li>
<li><a href="../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../gui/tables/RowNumberTable.html" title="class in gui.tables"><span class="strong">Prev Class</span></a></li>
<li><a href="../../gui/tables/Table.html" title="class in gui.tables"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../index.html?gui/tables/TabbedPane.html" target="_top">Frames</a></li>
<li><a href="TabbedPane.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested_classes_inherited_from_class_javax.swing.JComponent">Nested</a>&nbsp;|&nbsp;</li>
<li><a href="#fields_inherited_from_class_javax.swing.JTabbedPane">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">gui.tables</div>
<h2 title="Class TabbedPane" class="title">Class TabbedPane</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>java.awt.Component</li>
<li>
<ul class="inheritance">
<li>java.awt.Container</li>
<li>
<ul class="inheritance">
<li>javax.swing.JComponent</li>
<li>
<ul class="inheritance">
<li>javax.swing.JTabbedPane</li>
<li>
<ul class="inheritance">
<li>gui.tables.TabbedPane</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd>java.awt.image.ImageObserver, java.awt.MenuContainer, java.io.Serializable, javax.accessibility.Accessible, javax.swing.SwingConstants</dd>
</dl>
<hr>
<br>
<pre>public class <span class="strong">TabbedPane</span>
extends javax.swing.JTabbedPane</pre>
<div class="block">Extension of <code>JTabbedPane</code> class. Contains tabs which hold opened
 tables.</div>
<dl><dt><span class="strong">Author:</span></dt>
  <dd>Ivan Divljak</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../serialized-form.html#gui.tables.TabbedPane">Serialized Form</a></dd></dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== NESTED CLASS SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="nested_class_summary">
<!--   -->
</a>
<h3>Nested Class Summary</h3>
<ul class="blockList">
<li class="blockList"><a name="nested_classes_inherited_from_class_javax.swing.JComponent">
<!--   -->
</a>
<h3>Nested classes/interfaces inherited from class&nbsp;javax.swing.JComponent</h3>
<code>javax.swing.JComponent.AccessibleJComponent</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="nested_classes_inherited_from_class_java.awt.Component">
<!--   -->
</a>
<h3>Nested classes/interfaces inherited from class&nbsp;java.awt.Component</h3>
<code>java.awt.Component.BaselineResizeBehavior</code></li>
</ul>
</li>
</ul>
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field_summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<ul class="blockList">
<li class="blockList"><a name="fields_inherited_from_class_javax.swing.JTabbedPane">
<!--   -->
</a>
<h3>Fields inherited from class&nbsp;javax.swing.JTabbedPane</h3>
<code>SCROLL_TAB_LAYOUT, WRAP_TAB_LAYOUT</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="fields_inherited_from_class_javax.swing.JComponent">
<!--   -->
</a>
<h3>Fields inherited from class&nbsp;javax.swing.JComponent</h3>
<code>TOOL_TIP_TEXT_KEY, UNDEFINED_CONDITION, WHEN_ANCESTOR_OF_FOCUSED_COMPONENT, WHEN_FOCUSED, WHEN_IN_FOCUSED_WINDOW</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="fields_inherited_from_class_java.awt.Component">
<!--   -->
</a>
<h3>Fields inherited from class&nbsp;java.awt.Component</h3>
<code>BOTTOM_ALIGNMENT, CENTER_ALIGNMENT, LEFT_ALIGNMENT, RIGHT_ALIGNMENT, TOP_ALIGNMENT</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="fields_inherited_from_class_javax.swing.SwingConstants">
<!--   -->
</a>
<h3>Fields inherited from interface&nbsp;javax.swing.SwingConstants</h3>
<code>BOTTOM, CENTER, EAST, HORIZONTAL, LEADING, LEFT, NEXT, NORTH, NORTH_EAST, NORTH_WEST, PREVIOUS, RIGHT, SOUTH, SOUTH_EAST, SOUTH_WEST, TOP, TRAILING, VERTICAL, WEST</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="fields_inherited_from_class_java.awt.image.ImageObserver">
<!--   -->
</a>
<h3>Fields inherited from interface&nbsp;java.awt.image.ImageObserver</h3>
<code>ABORT, ALLBITS, ERROR, FRAMEBITS, HEIGHT, PROPERTIES, SOMEBITS, WIDTH</code></li>
</ul>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../../gui/tables/TabbedPane.html#TabbedPane(boolean)">TabbedPane</a></strong>(boolean&nbsp;isMainTabbedPane)</code>
<div class="block">Constructor of <a href="../../gui/tables/TabbedPane.html" title="class in gui.tables"><code>TabbedPane</code></a> class.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colOne"><code><strong><a href="../../gui/tables/TabbedPane.html#TabbedPane(model.TreeNode,%20model.TableModel)">TabbedPane</a></strong>(<a href="../../model/TreeNode.html" title="class in model">TreeNode</a>&nbsp;parentNode,
          <a href="../../model/TableModel.html" title="class in model">TableModel</a>&nbsp;parentTableModel)</code>
<div class="block">Constructor of the <a href="../../gui/tables/TabbedPane.html" title="class in gui.tables"><code>TabbedPane</code></a> class.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../gui/tables/TabbedPane.html#createTabIfNotExists(model.TreeNode,%20model.TableModel)">createTabIfNotExists</a></strong>(<a href="../../model/TreeNode.html" title="class in model">TreeNode</a>&nbsp;node,
                    <a href="../../model/TableModel.html" title="class in model">TableModel</a>&nbsp;parentTableModel)</code>
<div class="block">Given the <a href="../../model/TreeNode.html" title="class in model"><code>TreeNode</code></a> and <a href="../../model/TableModel.html" title="class in model"><code>TableModel</code></a> of the parent table, it
 creates a tab with the corresponding <a href="../../gui/tables/Table.html" title="class in gui.tables"><code>Table</code></a> if one does not
 already exist.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static <a href="../../gui/tables/TabbedPane.html" title="class in gui.tables">TabbedPane</a></code></td>
<td class="colLast"><code><strong><a href="../../gui/tables/TabbedPane.html#getLastSelectedTabbedPane()">getLastSelectedTabbedPane</a></strong>()</code>
<div class="block">Returns the last selected <a href="../../gui/tables/TabbedPane.html" title="class in gui.tables"><code>TabbedPane</code></a> (main, or one of the
 children).</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static <a href="../../gui/tables/TabbedPane.html" title="class in gui.tables">TabbedPane</a></code></td>
<td class="colLast"><code><strong><a href="../../gui/tables/TabbedPane.html#getMainTabbedPane()">getMainTabbedPane</a></strong>()</code>
<div class="block">Returns the main (parent) <a href="../../gui/tables/TabbedPane.html" title="class in gui.tables"><code>TabbedPane</code></a>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.util.ArrayList&lt;<a href="../../model/TreeNode.html" title="class in model">TreeNode</a>&gt;</code></td>
<td class="colLast"><code><strong><a href="../../gui/tables/TabbedPane.html#getOpenedNodes()">getOpenedNodes</a></strong>()</code>
<div class="block">Returns a list of all opened nodes (tables).</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code><a href="../../listeners/tab/TabChangeListener.html" title="class in listeners.tab">TabChangeListener</a></code></td>
<td class="colLast"><code><strong><a href="../../gui/tables/TabbedPane.html#getTabChangeListener()">getTabChangeListener</a></strong>()</code>
<div class="block">Returns the <a href="../../listeners/tab/TabChangeListener.html" title="class in listeners.tab"><code>TabChangeListener</code></a> of <a href="../../gui/tables/TabbedPane.html" title="class in gui.tables"><code>TabbedPane</code></a>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="../../listeners/tab/TabMouseListener.html" title="class in listeners.tab">TabMouseListener</a></code></td>
<td class="colLast"><code><strong><a href="../../gui/tables/TabbedPane.html#getTabMouseListener()">getTabMouseListener</a></strong>()</code>
<div class="block">Returns the <a href="../../listeners/tab/TabMouseListener.html" title="class in listeners.tab"><code>TabMouseListener</code></a> of <a href="../../gui/tables/TabbedPane.html" title="class in gui.tables"><code>TabbedPane</code></a>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../gui/tables/TabbedPane.html#isMainTabbedPane()">isMainTabbedPane</a></strong>()</code>
<div class="block">Returns <code>true</code> if this <a href="../../gui/tables/TabbedPane.html" title="class in gui.tables"><code>TabbedPane</code></a> is a main (parent)
 <code>TabbedPane</code>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../gui/tables/TabbedPane.html#remove(int)">remove</a></strong>(int&nbsp;index)</code>
<div class="block">Overriden <code>JTabbedPane.remove(int)</code> method.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../gui/tables/TabbedPane.html#removeAll()">removeAll</a></strong>()</code>
<div class="block">Overriden <code>JTabbedPane.removeAll()</code> method.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../gui/tables/TabbedPane.html#setLastSelectedTabbedPane(gui.tables.TabbedPane)">setLastSelectedTabbedPane</a></strong>(<a href="../../gui/tables/TabbedPane.html" title="class in gui.tables">TabbedPane</a>&nbsp;tabbedPane)</code>
<div class="block">Sets the last selected <a href="../../gui/tables/TabbedPane.html" title="class in gui.tables"><code>TabbedPane</code></a> (main, or one of the children).</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../gui/tables/TabbedPane.html#setMainTabbedPane(boolean)">setMainTabbedPane</a></strong>(boolean&nbsp;isMainTabbedPane)</code>
<div class="block">Sets (<code>true</code> or <code>false</code>) whether this <a href="../../gui/tables/TabbedPane.html" title="class in gui.tables"><code>TabbedPane</code></a> is a
 main (parent) <code>TabbedPane</code>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../../gui/tables/TabbedPane.html#setMainTabbedPane(gui.tables.TabbedPane)">setMainTabbedPane</a></strong>(<a href="../../gui/tables/TabbedPane.html" title="class in gui.tables">TabbedPane</a>&nbsp;mainTabbedPane)</code>
<div class="block">Sets the main (parent) <a href="../../gui/tables/TabbedPane.html" title="class in gui.tables"><code>TabbedPane</code></a>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../gui/tables/TabbedPane.html#setOpenedNodes(java.util.ArrayList)">setOpenedNodes</a></strong>(java.util.ArrayList&lt;<a href="../../model/TreeNode.html" title="class in model">TreeNode</a>&gt;&nbsp;openedNodes)</code>
<div class="block">Sets an <code>ArrayList</code> of all opened nodes (tables).</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../gui/tables/TabbedPane.html#setTabChangeListener(listeners.tab.TabChangeListener)">setTabChangeListener</a></strong>(<a href="../../listeners/tab/TabChangeListener.html" title="class in listeners.tab">TabChangeListener</a>&nbsp;tabChangeListener)</code>
<div class="block">Sets the <a href="../../listeners/tab/TabChangeListener.html" title="class in listeners.tab"><code>TabChangeListener</code></a> of <a href="../../gui/tables/TabbedPane.html" title="class in gui.tables"><code>TabbedPane</code></a>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../gui/tables/TabbedPane.html#setTabMouseListener(listeners.tab.TabMouseListener)">setTabMouseListener</a></strong>(<a href="../../listeners/tab/TabMouseListener.html" title="class in listeners.tab">TabMouseListener</a>&nbsp;tabMouseListener)</code>
<div class="block">Sets the <a href="../../listeners/tab/TabMouseListener.html" title="class in listeners.tab"><code>TabMouseListener</code></a> of <a href="../../gui/tables/TabbedPane.html" title="class in gui.tables"><code>TabbedPane</code></a>.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_javax.swing.JTabbedPane">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;javax.swing.JTabbedPane</h3>
<code>add, add, add, add, add, addChangeListener, addTab, addTab, addTab, getAccessibleContext, getBackgroundAt, getBoundsAt, getChangeListeners, getComponentAt, getDisabledIconAt, getDisplayedMnemonicIndexAt, getForegroundAt, getIconAt, getMnemonicAt, getModel, getSelectedComponent, getSelectedIndex, getTabComponentAt, getTabCount, getTabLayoutPolicy, getTabPlacement, getTabRunCount, getTitleAt, getToolTipText, getToolTipTextAt, getUI, getUIClassID, indexAtLocation, indexOfComponent, indexOfTab, indexOfTab, indexOfTabComponent, insertTab, isEnabledAt, remove, removeChangeListener, removeTabAt, setBackgroundAt, setComponentAt, setDisabledIconAt, setDisplayedMnemonicIndexAt, setEnabledAt, setForegroundAt, setIconAt, setMnemonicAt, setModel, setSelectedComponent, setSelectedIndex, setTabComponentAt, setTabLayoutPolicy, setTabPlacement, setTitleAt, setToolTipTextAt, setUI, updateUI</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_javax.swing.JComponent">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;javax.swing.JComponent</h3>
<code>addAncestorListener, addNotify, addVetoableChangeListener, computeVisibleRect, contains, createToolTip, disable, enable, firePropertyChange, firePropertyChange, firePropertyChange, getActionForKeyStroke, getActionMap, getAlignmentX, getAlignmentY, getAncestorListeners, getAutoscrolls, getBaseline, getBaselineResizeBehavior, getBorder, getBounds, getClientProperty, getComponentPopupMenu, getConditionForKeyStroke, getDebugGraphicsOptions, getDefaultLocale, getFontMetrics, getGraphics, getHeight, getInheritsPopupMenu, getInputMap, getInputMap, getInputVerifier, getInsets, getInsets, getListeners, getLocation, getMaximumSize, getMinimumSize, getNextFocusableComponent, getPopupLocation, getPreferredSize, getRegisteredKeyStrokes, getRootPane, getSize, getToolTipLocation, getToolTipText, getTopLevelAncestor, getTransferHandler, getVerifyInputWhenFocusTarget, getVetoableChangeListeners, getVisibleRect, getWidth, getX, getY, grabFocus, hide, isDoubleBuffered, isLightweightComponent, isManagingFocus, isOpaque, isOptimizedDrawingEnabled, isPaintingForPrint, isPaintingTile, isRequestFocusEnabled, isValidateRoot, paint, paintImmediately, paintImmediately, print, printAll, putClientProperty, registerKeyboardAction, registerKeyboardAction, removeAncestorListener, removeNotify, removeVetoableChangeListener, repaint, repaint, requestDefaultFocus, requestFocus, requestFocus, requestFocusInWindow, resetKeyboardActions, reshape, revalidate, scrollRectToVisible, setActionMap, setAlignmentX, setAlignmentY, setAutoscrolls, setBackground, setBorder, setComponentPopupMenu, setDebugGraphicsOptions, setDefaultLocale, setDoubleBuffered, setEnabled, setFocusTraversalKeys, setFont, setForeground, setInheritsPopupMenu, setInputMap, setInputVerifier, setMaximumSize, setMinimumSize, setNextFocusableComponent, setOpaque, setPreferredSize, setRequestFocusEnabled, setToolTipText, setTransferHandler, setVerifyInputWhenFocusTarget, setVisible, unregisterKeyboardAction, update</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.awt.Container">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.awt.Container</h3>
<code>addContainerListener, addPropertyChangeListener, addPropertyChangeListener, applyComponentOrientation, areFocusTraversalKeysSet, countComponents, deliverEvent, doLayout, findComponentAt, findComponentAt, getComponent, getComponentAt, getComponentAt, getComponentCount, getComponents, getComponentZOrder, getContainerListeners, getFocusTraversalKeys, getFocusTraversalPolicy, getLayout, getMousePosition, insets, invalidate, isAncestorOf, isFocusCycleRoot, isFocusCycleRoot, isFocusTraversalPolicyProvider, isFocusTraversalPolicySet, layout, list, list, locate, minimumSize, paintComponents, preferredSize, printComponents, removeContainerListener, setComponentZOrder, setFocusCycleRoot, setFocusTraversalPolicy, setFocusTraversalPolicyProvider, setLayout, transferFocusDownCycle, validate</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.awt.Component">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.awt.Component</h3>
<code>action, add, addComponentListener, addFocusListener, addHierarchyBoundsListener, addHierarchyListener, addInputMethodListener, addKeyListener, addMouseListener, addMouseMotionListener, addMouseWheelListener, bounds, checkImage, checkImage, contains, createImage, createImage, createVolatileImage, createVolatileImage, dispatchEvent, enable, enableInputMethods, firePropertyChange, firePropertyChange, firePropertyChange, firePropertyChange, firePropertyChange, getBackground, getBounds, getColorModel, getComponentListeners, getComponentOrientation, getCursor, getDropTarget, getFocusCycleRootAncestor, getFocusListeners, getFocusTraversalKeysEnabled, getFont, getForeground, getGraphicsConfiguration, getHierarchyBoundsListeners, getHierarchyListeners, getIgnoreRepaint, getInputContext, getInputMethodListeners, getInputMethodRequests, getKeyListeners, getLocale, getLocation, getLocationOnScreen, getMouseListeners, getMouseMotionListeners, getMousePosition, getMouseWheelListeners, getName, getParent, getPeer, getPropertyChangeListeners, getPropertyChangeListeners, getSize, getToolkit, getTreeLock, gotFocus, handleEvent, hasFocus, imageUpdate, inside, isBackgroundSet, isCursorSet, isDisplayable, isEnabled, isFocusable, isFocusOwner, isFocusTraversable, isFontSet, isForegroundSet, isLightweight, isMaximumSizeSet, isMinimumSizeSet, isPreferredSizeSet, isShowing, isValid, isVisible, keyDown, keyUp, list, list, list, location, lostFocus, mouseDown, mouseDrag, mouseEnter, mouseExit, mouseMove, mouseUp, move, nextFocus, paintAll, postEvent, prepareImage, prepareImage, remove, removeComponentListener, removeFocusListener, removeHierarchyBoundsListener, removeHierarchyListener, removeInputMethodListener, removeKeyListener, removeMouseListener, removeMouseMotionListener, removeMouseWheelListener, removePropertyChangeListener, removePropertyChangeListener, repaint, repaint, repaint, resize, resize, setBounds, setBounds, setComponentOrientation, setCursor, setDropTarget, setFocusable, setFocusTraversalKeysEnabled, setIgnoreRepaint, setLocale, setLocation, setLocation, setName, setSize, setSize, show, show, size, toString, transferFocus, transferFocusBackward, transferFocusUpCycle</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>equals, getClass, hashCode, notify, notifyAll, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="TabbedPane(model.TreeNode, model.TableModel)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TabbedPane</h4>
<pre>public&nbsp;TabbedPane(<a href="../../model/TreeNode.html" title="class in model">TreeNode</a>&nbsp;parentNode,
          <a href="../../model/TableModel.html" title="class in model">TableModel</a>&nbsp;parentTableModel)</pre>
<div class="block">Constructor of the <a href="../../gui/tables/TabbedPane.html" title="class in gui.tables"><code>TabbedPane</code></a> class. Parameters
 <code>parentNode</code> and <code>parentTableModel</code> are <a href="../../model/TreeNode.html" title="class in model"><code>TreeNode</code></a> and
 <a href="../../model/TableModel.html" title="class in model"><code>TableModel</code></a> used for making <a href="../../gui/tables/TabbedPane.html" title="class in gui.tables"><code>TabbedPane</code></a> with child tables.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>parentNode</code> - </dd><dd><code>parentTableModel</code> - </dd></dl>
</li>
</ul>
<a name="TabbedPane(boolean)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>TabbedPane</h4>
<pre>public&nbsp;TabbedPane(boolean&nbsp;isMainTabbedPane)</pre>
<div class="block">Constructor of <a href="../../gui/tables/TabbedPane.html" title="class in gui.tables"><code>TabbedPane</code></a> class. Parameter <code>isTabbedPane</code>
 determines whether this <code>TabbedPane</code> will be created as a parent or
 as a child <code>TabbedPane</code>.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>isMainTabbedPane</code> - </dd></dl>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="getOpenedNodes()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getOpenedNodes</h4>
<pre>public&nbsp;java.util.ArrayList&lt;<a href="../../model/TreeNode.html" title="class in model">TreeNode</a>&gt;&nbsp;getOpenedNodes()</pre>
<div class="block">Returns a list of all opened nodes (tables).</div>
<dl><dt><span class="strong">Returns:</span></dt><dd><code>ArrayList</code></dd></dl>
</li>
</ul>
<a name="setOpenedNodes(java.util.ArrayList)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setOpenedNodes</h4>
<pre>public&nbsp;void&nbsp;setOpenedNodes(java.util.ArrayList&lt;<a href="../../model/TreeNode.html" title="class in model">TreeNode</a>&gt;&nbsp;openedNodes)</pre>
<div class="block">Sets an <code>ArrayList</code> of all opened nodes (tables).</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>openedNodes</code> - </dd></dl>
</li>
</ul>
<a name="createTabIfNotExists(model.TreeNode, model.TableModel)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>createTabIfNotExists</h4>
<pre>public&nbsp;void&nbsp;createTabIfNotExists(<a href="../../model/TreeNode.html" title="class in model">TreeNode</a>&nbsp;node,
                        <a href="../../model/TableModel.html" title="class in model">TableModel</a>&nbsp;parentTableModel)</pre>
<div class="block">Given the <a href="../../model/TreeNode.html" title="class in model"><code>TreeNode</code></a> and <a href="../../model/TableModel.html" title="class in model"><code>TableModel</code></a> of the parent table, it
 creates a tab with the corresponding <a href="../../gui/tables/Table.html" title="class in gui.tables"><code>Table</code></a> if one does not
 already exist. In that case, the already opened tab is selected.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>node</code> - </dd><dd><code>parentTableModel</code> - </dd></dl>
</li>
</ul>
<a name="getTabChangeListener()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getTabChangeListener</h4>
<pre>public&nbsp;<a href="../../listeners/tab/TabChangeListener.html" title="class in listeners.tab">TabChangeListener</a>&nbsp;getTabChangeListener()</pre>
<div class="block">Returns the <a href="../../listeners/tab/TabChangeListener.html" title="class in listeners.tab"><code>TabChangeListener</code></a> of <a href="../../gui/tables/TabbedPane.html" title="class in gui.tables"><code>TabbedPane</code></a>.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd><a href="../../listeners/tab/TabChangeListener.html" title="class in listeners.tab"><code>TabChangeListener</code></a></dd></dl>
</li>
</ul>
<a name="setTabChangeListener(listeners.tab.TabChangeListener)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setTabChangeListener</h4>
<pre>public&nbsp;void&nbsp;setTabChangeListener(<a href="../../listeners/tab/TabChangeListener.html" title="class in listeners.tab">TabChangeListener</a>&nbsp;tabChangeListener)</pre>
<div class="block">Sets the <a href="../../listeners/tab/TabChangeListener.html" title="class in listeners.tab"><code>TabChangeListener</code></a> of <a href="../../gui/tables/TabbedPane.html" title="class in gui.tables"><code>TabbedPane</code></a>.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>tabChangeListener</code> - </dd></dl>
</li>
</ul>
<a name="getTabMouseListener()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getTabMouseListener</h4>
<pre>public&nbsp;<a href="../../listeners/tab/TabMouseListener.html" title="class in listeners.tab">TabMouseListener</a>&nbsp;getTabMouseListener()</pre>
<div class="block">Returns the <a href="../../listeners/tab/TabMouseListener.html" title="class in listeners.tab"><code>TabMouseListener</code></a> of <a href="../../gui/tables/TabbedPane.html" title="class in gui.tables"><code>TabbedPane</code></a>.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd><a href="../../listeners/tab/TabMouseListener.html" title="class in listeners.tab"><code>TabMouseListener</code></a></dd></dl>
</li>
</ul>
<a name="setTabMouseListener(listeners.tab.TabMouseListener)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setTabMouseListener</h4>
<pre>public&nbsp;void&nbsp;setTabMouseListener(<a href="../../listeners/tab/TabMouseListener.html" title="class in listeners.tab">TabMouseListener</a>&nbsp;tabMouseListener)</pre>
<div class="block">Sets the <a href="../../listeners/tab/TabMouseListener.html" title="class in listeners.tab"><code>TabMouseListener</code></a> of <a href="../../gui/tables/TabbedPane.html" title="class in gui.tables"><code>TabbedPane</code></a>.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>tabMouseListener</code> - </dd></dl>
</li>
</ul>
<a name="isMainTabbedPane()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isMainTabbedPane</h4>
<pre>public&nbsp;boolean&nbsp;isMainTabbedPane()</pre>
<div class="block">Returns <code>true</code> if this <a href="../../gui/tables/TabbedPane.html" title="class in gui.tables"><code>TabbedPane</code></a> is a main (parent)
 <code>TabbedPane</code>.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>boolean</dd></dl>
</li>
</ul>
<a name="setMainTabbedPane(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setMainTabbedPane</h4>
<pre>public&nbsp;void&nbsp;setMainTabbedPane(boolean&nbsp;isMainTabbedPane)</pre>
<div class="block">Sets (<code>true</code> or <code>false</code>) whether this <a href="../../gui/tables/TabbedPane.html" title="class in gui.tables"><code>TabbedPane</code></a> is a
 main (parent) <code>TabbedPane</code>.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>isMainTabbedPane</code> - </dd></dl>
</li>
</ul>
<a name="getMainTabbedPane()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getMainTabbedPane</h4>
<pre>public static&nbsp;<a href="../../gui/tables/TabbedPane.html" title="class in gui.tables">TabbedPane</a>&nbsp;getMainTabbedPane()</pre>
<div class="block">Returns the main (parent) <a href="../../gui/tables/TabbedPane.html" title="class in gui.tables"><code>TabbedPane</code></a>.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd><a href="../../gui/tables/TabbedPane.html" title="class in gui.tables"><code>TabbedPane</code></a></dd></dl>
</li>
</ul>
<a name="setMainTabbedPane(gui.tables.TabbedPane)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setMainTabbedPane</h4>
<pre>public static&nbsp;void&nbsp;setMainTabbedPane(<a href="../../gui/tables/TabbedPane.html" title="class in gui.tables">TabbedPane</a>&nbsp;mainTabbedPane)</pre>
<div class="block">Sets the main (parent) <a href="../../gui/tables/TabbedPane.html" title="class in gui.tables"><code>TabbedPane</code></a>.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>mainTabbedPane</code> - </dd></dl>
</li>
</ul>
<a name="getLastSelectedTabbedPane()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getLastSelectedTabbedPane</h4>
<pre>public static&nbsp;<a href="../../gui/tables/TabbedPane.html" title="class in gui.tables">TabbedPane</a>&nbsp;getLastSelectedTabbedPane()</pre>
<div class="block">Returns the last selected <a href="../../gui/tables/TabbedPane.html" title="class in gui.tables"><code>TabbedPane</code></a> (main, or one of the
 children).</div>
<dl><dt><span class="strong">Returns:</span></dt><dd><a href="../../gui/tables/TabbedPane.html" title="class in gui.tables"><code>TabbedPane</code></a></dd></dl>
</li>
</ul>
<a name="setLastSelectedTabbedPane(gui.tables.TabbedPane)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setLastSelectedTabbedPane</h4>
<pre>public static&nbsp;void&nbsp;setLastSelectedTabbedPane(<a href="../../gui/tables/TabbedPane.html" title="class in gui.tables">TabbedPane</a>&nbsp;tabbedPane)</pre>
<div class="block">Sets the last selected <a href="../../gui/tables/TabbedPane.html" title="class in gui.tables"><code>TabbedPane</code></a> (main, or one of the children).</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>tabbedPane</code> - </dd></dl>
</li>
</ul>
<a name="remove(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>remove</h4>
<pre>public&nbsp;void&nbsp;remove(int&nbsp;index)</pre>
<div class="block">Overriden <code>JTabbedPane.remove(int)</code> method. It additionally removes
 linked nodes from <a href="../../gui/tables/TabbedPane.html#openedNodes"><code>openedNodes</code></a> and <a href="../../model/TableModel.html" title="class in model"><code>TableModel</code></a>s from
 opened table models.</div>
<dl>
<dt><strong>Overrides:</strong></dt>
<dd><code>remove</code>&nbsp;in class&nbsp;<code>javax.swing.JTabbedPane</code></dd>
</dl>
</li>
</ul>
<a name="removeAll()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>removeAll</h4>
<pre>public&nbsp;void&nbsp;removeAll()</pre>
<div class="block">Overriden <code>JTabbedPane.removeAll()</code> method. It additionally clears
 <a href="../../gui/tables/TabbedPane.html#openedNodes"><code>openedNodes</code></a> list and opened table models list.</div>
<dl>
<dt><strong>Overrides:</strong></dt>
<dd><code>removeAll</code>&nbsp;in class&nbsp;<code>javax.swing.JTabbedPane</code></dd>
</dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/TabbedPane.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../index-files/index-1.html">Index</a></li>
<li><a href="../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../gui/tables/RowNumberTable.html" title="class in gui.tables"><span class="strong">Prev Class</span></a></li>
<li><a href="../../gui/tables/Table.html" title="class in gui.tables"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../index.html?gui/tables/TabbedPane.html" target="_top">Frames</a></li>
<li><a href="TabbedPane.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested_classes_inherited_from_class_javax.swing.JComponent">Nested</a>&nbsp;|&nbsp;</li>
<li><a href="#fields_inherited_from_class_javax.swing.JTabbedPane">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
